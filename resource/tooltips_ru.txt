


valuestream~отображает текущее значение элемента управления
~speed~как быстро должен прокручиваться дисплей



timerdisplay~отображает таймер, чтобы указать, как долго работает патч
~reset~сбросить таймер на ноль



timelinecontrol~[брошенный модуль, возможно, сломанный] глобальный контроль временной шкалы для перемещения транспорта
~measure~[todo]
~loop~[todo]
~loop start~[todo]
~loop end~[todo]



selector~переключатель для включения только одного значения за раз. установите для него флажок «включен» на нескольких модулях, чтобы активировать только один модуль за раз. хорошо работает совместно с модулем «groupcontrol».
~slector~, значение которого должно быть установлено на 1



scriptstatus~показывает всю информацию в текущей области видимости, для отладки python скриптов
~reset all~сбросить переменные области видимости



script~редактирование и запуск python скриптов в реальном времени с управлением модулями
~loadscript~выберите скрипт, затем нажмите "load"
~load~загрузить выбранный скрипт
~save as~сохранить текущий скрипт
~?~показать ссылку на скрипт
~code~напишите здесь код. нажмите Ctrl-R чтобы выполнить код, или ctrl-shift-R, чтобы просто выполнить текущий блок.
~run~щелкните здесь, чтобы выполнить код, или нажмите ctrl-R
~stop~отменить все события, запланированные этим скриптом
~a~переменная для использования в скрипте, можно изменять из других источников (модулей), доступна через me.get("a")
~b~переменная для использования в скрипте, можно изменять из других источников (модулей), доступна через me.get("b")
~c~переменная для использования в скрипте, можно изменять из других источников (модулей), доступна через me.get("c")
~d~переменная для использования в скрипте, можно изменять из других источников (модулей), доступна через me.get("d")
~style~выбор ыветовой схемы редактора из файла script_styles.json


radiosequencer~секвенсер, активирущий только одно значение за раз. подключите «активированные» чекбоксы к нескольким модулям. хорошо работает совместно с модулем «groupcontrol».
~interval~скорость продвижения
~length~длина последовательности
~grid~вставьте сетку из модуля "midicontroller"



preset~сохранить и восстановить наборы значений. соедините серый кружок с модулями, чтобы сохранить все значения в этом модуле. соедините фиолетовый кружок с элементом управления, чтобы сохранить только его. Удерживая нажатой клавишу Shift, щелкните сетку (Grid), чтобы сохранить предустановку для этой части сетки, и щелкните квадрат сетки, чтобы загрузить эту предустановку.
~save~[todo]
~blend ms~время наложения предустановленных значений
~preset~переход к предустановке



prefab~создать коллекцию модулей, которые можно загрузить из меню «prefabs». перетащите сюда модули, чтобы добавить их в префаб. перетащите серый кабель к любым модулям, которые вы хотите удалить из префаба.
~save~сохранить как файл .pfb
~load~загрузить .pfb
~disband~освободить все модули из этого префаба



oscoutput~отправлять сообщения OSC при изменении значений ползунка или при получении нот
~osc out address~адрес назначения для отправки сообщений OSC
~osc out port~порт для отправки сообщений OSC
~label*~метка (label) для отправки значения ползунка. сообщение будет отправлено в формате /bespoke/[label] [value]
~slider*~отправляет значение по адресу. попробуйте подключить к нему модулятор, например, модуль leveltocv для отправки уровней звука.
~note out address~метка для отправки входных нот. сообщение будет отправлено в формате /bespoke/[label] [pitch] [velocity]



loopstorer~[заброшенный модуль, вероятно, сломанный] хранит лупы, чтобы менять их местами.
~rewrite~[todo]
~quantization~[todo]
~clear~[todo]
~select *~[todo]



loopergranulator~используется с модулем "looper" для воспроизведения содержимого с гранулярным синтезом
~on~использовать гранулированный синтез для воспроизведения лупа
~overlap~количество перекрывающихся гранул
~speed~скорость воспроизведения гранул
~len ms~длина каждой гранулы в миллисекундах
~loop pos~позиция воспроизведения в лупе
~freeze~остановить движение лупера
~pos rand~рандомизация начальной точки гранулы
~speed rand~рандомизация скорости гранулы
~spacing rand~рандомизация времени между гранулами
~octaves~добавлять ли октавы и квинты?
~width~стерео панорама размещения гранулы



groupcontrol~управление чекбоксами с помощью одного группового чекбокса
~group enabled~контролирует подключенные чекбоксы



grid~стандартная сетка (Grid), которая используется модулем "script" в написании скриптов, использующих контроллеры midi
~grid~вставьте здесь сетку из модуля "midicontroller"
~momentary~обрабатывать клики как входящие значения



globalcontrols~элементы управления интерфейсом, позволяющие использовать MIDI-контроллеры для навигации по холсту. управлять этими ползунками напрямую с помощью мыши не рекомендуется.
~zoom~уровень масштабирования
~x pos~горизонтальное положение панорамирования
~y pos~вертикальное положение панорамирования
~scroll x~эмулировать горизонтальную прокрутку мыши
~scroll y~эмулировать вертикальную прокрутку мыши
~lissajous r~количество красного на фоне кривой Лиссажу
~lissajous g~количество зеленого на фоне кривой Лиссажу
~lissajous b~количество синего на фоне кривой Лиссажу



eventcanvas~секвенсер значений (событий)
~quantize~квантует события в сетку
~measure~длинa лупа
~interval~сетка (Grid) для привязки событий
~record~запись значений по мере их изменения
~canvas~холст событий. Элементы управления холстом:\n —Shift-щелкните, чтобы добавить событие\n —удерживайте Shift и перетащите событие, чтобы дублировать\n —удерживайте alt, чтобы перетащить событие без привязки\n —удерживайте Ctrl при перетаскивании, чтобы привязать к интервалу\n —удерживайте Shift и прокрутите, чтобы увеличить\n —удерживать alt и захватить пустое пространство, чтобы переместить слайд холста\n —удерживайте Ctrl и захватите пустое пространство, чтобы увеличить холст
~timeline~точки управления лупом
~delete~удалить выделенные элементы
~view rows~количество видимых строк
~clear~удалить все элементы
~drag mode~направление, в котором элементы можно перетаскивать
~scrollh~горизонтальная полоса прокрутки



comment~отображает произвольный текста, например, для описания патча или его части
~comment~поле для ввода текста



pulsetrain~список импульсов для однократного выполнения
~length~длина последовательности
~interval~длина каждого шага в последовательности



pulsesequence~циклическая последовательность импульсов
~length~длина последовательности
~interval~длина каждого шага в последовательности
~<~сдвиг последовательности влево
~>~сдвиг последовательности вправо



pulser~отправляет импульсы с интервалом
~interval~частота отправки импульсов
~timemode~когда следует отправлять первую долю, или установите "free" для импульсов, не привязанных к транспорту
~t~интервал между импульсами в миллисекундах
~offset~смещение времени импульса, в долях такта
~random~указывает импульсным модулям рандомизировать их положение
~reset~длина последовательности перед отправкой импульса сброса
~div~деление измерения при использовании "div" в качестве интервала



pulsehocket~отправляет импульсы в случайне пункты назначения
~weight*~шанс, что импульс попадет в этот пункт назначения



pulsegate~контролирует пропускть или не пропускать импульс
~allow~могут ли проходить импульсы?



pulsedelayer~задержка импульсов
~delay~время задержки в долях такта



pulsechance~случайный затвор для импульсов
~chance~вероятность пропуска импульса



pulsebutton~запуск импульса нажатием кнопки
~pulse~запуск импульса



notetopulse~запускает импульс при получении ноты



audiotopulse~отправляет импульс, когда уровень звука превышает указанный порог
~threshold~отправить импульс, когда сигнал достигнет этого порога
~release~время восстановления звукового сигнала перед повторным запуском импульса



vinylcontrol~модулятор, который выводит значение скорости на основе входного аудиосигнала с винила. обеспечьте его стереофоническим сигналом с контрольной виниловой пластинки (например, вы бы использовали для управления serato), подключенным с «входного» модуля.
~control~включить/выключить управление транспортом. когда вы включите его, он будет использовать текущую скорость в качестве опорной (так что на выходе будет отображаться значение 1, пока вы не измените скорость винила)



velocitytocv~преобразует скорость ноты в значение модуляции
~min~выход для скорости 0
~max~выход для скорости 127



valuesetter~установить указанное значение на целевом элементе управления
~value~значение для установки
~set~щелкните здесь, чтобы отправить значение (или отправить импульс этому модулю для того же результата)



subtract~выводит разницу между занчением 1 и значением 2. Значение 1 и значение 2 предназначены для использования в качестве патчей для модуляторов.
~value 1~
~value 2~



smoother~выводит сглаженное значение ввода
~input~установите значение для сглаживания, вставьте сюда модулятор
~smooth~степень сглаживания для применения



ramper~смешать элемент управления с указанным значением в течение указанного времени
~length~время наложения
~start~начать смешивание (или отправить импульс этому модулю для того же результата)
~target~значение, которое будет достигнуто, когда рампа закончится



pressuretocv~возьмите давление ноты и преобразуйте его в значение модуляции
~min~выход для давления 0
~max~выход для давления 127



pitchtospeed~преобразование входного шага в отношение скоростей. вы можете использовать это для управления скоростью воспроизведения сэмпла и сделать его воспроизводимым с клавиатуры.
~ref freq~выход - это входная частота, деленная на это число.



pitchtocv~возьмите высоту ноты и преобразуйте ее в значение модуляции
~min~выход для шага 0
~max~мощность для шага 127



notetoms~принимает входную ноту и выводит период частоты этой ноты в миллисекундах. полезно для установки линий задержки для создания определенных высот.



notetofreq~принимает входную ноту и выводит частоту этой ноты в герцах



mult~выводит результат умножения значения 1 на значение 2. значения 1 и значение 2 предназначены для использования в качестве патчей модуляторов.
~value 1~
~value 2~



modwheeltocv~преобразовывает значение modwheel в значение модуляции
~min~выход для значения modwheel 0
~max~выход для значения modwheel 127



macroslider~принимает значение и отправляет масштабированные версии этого значения нескольким адресатам
~input~входное значение. предназначен для использования в качестве цели модуляционного патча.
~start*~выходное значение в нижней части входного диапазона
~end*~выходное значение в верхней части входного диапазона



leveltocv~выводить значение модуляции на основе уровня входящего звука
~gain~умножить входной аудиосигнал на это значение
~attack~повышается до входного уровня с этой скоростью
~release~затухание входного уровня с этой скоростью
~min~выход при нулевом уровне
~max~выход, когда уровень равен единице



gridsliders~используйте контроллер сетки для управления несколькими ползунками
~direction~должна ли сетка отображать ползунки вертикально или горизонтально?
~grid~вставьте сетку из модуля "midicontroller"



gravity~заставьте значение модуляции расти и падать с помощью физики
~gravity~гравитационная сила, применяемая вниз
~kick amt~количество направленной вверх силы, применяемой при ударе ногой
~drag~силу сопротивления, применяемую против скорости
~kick~щелкните, чтобы применить силу удара (или используйте этот модуль для того же результата)



fubble~нарисуйте на панели X/Y и воспроизведите рисунок, чтобы изменить значения. на основе концепции, предложенной оливией джек
~quantize~должны ли мы квантовать воспроизведение до определенного ритмического интервала?
~length~интервал для квантования до
~speed~ускорение или замедление воспроизведения
~clear~очистить рисунок
~mutate among~количество, чтобы повлиять на рисование с помощью поля шума Перлина
~mutate warp~масштаб поля шума Перлина
~mutate noise~скорость, чтобы пройти через шумовое поле Перлина
~reseed~перейти в другое место в поле шума Перлина



expression~модуляция формы с текстовым математическим выражением
~y=~выражение для изменения ввода. попробуйте что-нибудь вроде «x + sin(x*pi*a)». доступные переменные: a, b, c, d, e = ползунок + sin (s ниже. t = время. x1, x2, y1, y2 = биквадратное хранилище состояний.
~input~input для использования в качестве переменной x
~a~переменная для использования в выражениях
~b~переменная для использования в выражениях
~c~переменная для использования в выражениях
~d~переменная для использования в выражениях
~e~переменная для использования в выражениях



envelope~модулировать значение с помощью сработавшей огибающей
~advanced~переключиться на расширенный редактор огибающих (позволяет создавать более сложные огибающие, чем просто ADSR-огибающие). дважды щелкните расширенную линию огибающей, чтобы добавить шаги, щелкните правой кнопкой мыши точки, чтобы удалить их, потяните за линию, чтобы изогнуть ее.
~adsr~вид огибающей
~adsrA~подъем огибающей
~adsrD~спад огибающей
~adsrS~задержка огибающей
~adsrR~затузание огибающей
~low~низкое значение на выходе
~high~высокое значение на выходе
~length~длина отображения огибающей
~use velocity~должен ли выходной сигнал огибающей масштабироваться по входной скорости?
~has sustain~должен ли у этой огибающей быть задержка?
~sustain stage~на каком шаге огибающей будет задержка?
~max sustain~какова максимальная длина задержки в миллисекундах? значение -1 указывает на отсутствие максимума



curvelooper~модулировать значение с течением времени с помощью циклической кривой
~length~длина петли
~randomize~создать случайную кривую



curve~переназначает входной сигнал в его диапазоне с кривой. дважды щелкните кривую, чтобы добавить точки, щелкните точки правой кнопкой мыши, чтобы удалить их, перетащите линии, чтобы согнуть их.
~input~входное значение (предназначенное как цель модуляции)



controlsequencer~пошагово модулировать управление с интервалом
~interval~скорость продвижения
~length~длина последовательности
~random~рандомизировать значения последовательности



audiotocv~использовать аудиосигнал для модуляции элемента управления. разрешить модуляцию скорости звука для достижения таких эффектов, как FM.
~gain~умножение входящего звука
~min~минимальное выходное значение
~max~максимальное выходное значение



addcentered~выводит результат значения 1 плюс значение 2, умноженный на диапазон 2. Оптимизирован для использования в значении модуляции 1 диапазоном 2 на частоте. значение 1 или значение 2 предназначены для патчей модуляторов.
~value 1~центральное значение
~value 2~значение модуляции
~range 2~величина модуляции



add~выводит результат значения 1 плюс значение 2. значение 1 и значение 2 предназначены для исправления целей для модуляторов.
~value 1~значение для суммирования
~value 2~значение для суммирования



accum~накапливать значение с течением времени
~value~выходное значение
~velocity ~количество для накопления



slidersequencer~запускать ноты на непрерывной временной шкале
~division~скорость прогресса
~time*~время активировать этот элемент
~vel*~скорость этого элемента
~note*~шаг для этого элемента
~playing*~этот элемент играет?



randomnote~играть ноту с заданным интервалом со случайным шансом
~interval~длина ноты
~probability~шанс, что нота будет играть каждый интервал
~pitch~используемая высота
~velocity~используемая скорость
~offset~количество времени для смещения воспроизведения в пределах интервала
~skip~после воспроизведения ноты, не проигрывать ноту следующие n-1 раз, которые она могла бы сыграть



push2control~использует ableton push 2 для управления bespoke интерфейсом



polyrhythms~циклическая последовательность с линиями на разных делениях
~length*~количество шагов для этой строки
~note*~шаг для использования в этой строке



playsequencer~секвенсор ударных, который позволяет вам записывать и накладывать шаги, вдохновленные драм-машиной Pulsar-23
~grid~вставьте сетку из модуля "midicontroller"
~interval~размер шага
~measure~длину петли
~write~если текущий ввод должен быть записан в последовательность. это также удалит шаги, если для этой строки включено отключение/удаление
~note repeat~если удерживаемые ноты должны повторяться каждый шаг
~link columns~если управление отключением/удалением должно использоваться для всего столбца
~store*~сохранить текущую последовательность в этот слот
~load*~загрузить последовательность, хранящуюся в этом слоте
~mute/delete*~если запись отключена, заглушить эту строку. если запись разрешена, очищайте шаги по мере их прохождения ползунком



notesinger~вывод ноты на основе обнаруженной высоты тона
~oct~октава для регулировки высоты звука на выходе



notesequencer~циклическая последовательность нот с интервалом. в паре с модулем "pulser" для более интересного пошагового управления. удерживайте «shift», чтобы отрегулировать длину шага.
~interval~длина ноты
~pitch~рандомизирует высоту звука в последовательности. удерживайте сдвиг, чтобы ограничить случайную выборку только корнями и пятыми.
~len~рандомизирует длину ноты каждого шага.
~vel~рандомизирует скорость ноты каждого шага.
~length~длина, которую должна воспроизводить последовательность ниже. Общая длина сетки может быть изменена путем настройки «шагов сетки» в меню треугольника.
~<~сдвинуть последовательность влево
~>~сдвинуть последовательность вправо
~clear~очистить все шаги
~octave~октава нижнего тона этой последовательности
~notemode~какой набор высот должны представлять строки?
~loop reset~когда последовательность зацикливается, вместо этого сбросьте его сюда. отправить сообщение в стиле «мрачной доли» от генератора импульсов, чтобы перезапустить последовательность с первого шага.
~tone*~высота для этого столбца
~vel*~скорость для этого столбца
~len*~длина этого столбца
~grid~вставьте сетку из модуля "midicontroller"
~x offset~x смещение подключенного контроллера сетки
~y offset~y смещение подключенного контроллера сетки
~rand pitch chance~при нажатии кнопки случайного шага, какова вероятность того, что шаг будет изменен?
~rand pitch range~при нажатии кнопки случайного шага, насколько сильно изменится высота звука?
~rand len chance~при нажатии кнопки случайной длины, какова вероятность того, что шаг будет изменен?
~rand len range~при нажатии кнопки случайной длины, насколько изменится длина?
~rand vel chance~при нажатии кнопки случайной скорости, какова вероятность того, что шаг будет изменен?
~rand vel density~при нажатии кнопки случайной скорости, каковы шансы, что шаг должен иметь примечание?



notelooper~записывает нотные лупы и может накладыватьл или заменять их при записи
~write~ну что, включаем запись ввода?
~del/mute~если "write" включено, стирает ноты, когда ползунок проходит по ним. в противном случае просто выключает их.
~num bars~установить длину лупа в тактах
~clear~отчистить патерн
~store*~сохранить патерн
~load*~восстановить патерн
~canvas~поле записанных нот



notecreator~создать разовую ноту
~pitch~высота выходной ноты
~trigger~нажмите, чтобы активировать ноту на указанную продолжительность
~on~включить, чтобы начать ноту, выключить, чтобы закончить ноту
~velocity~скорость ноты
~duration~длительность ноты при использовании кнопки "trigger"



notecounter~продвигается по высотам последовательно. полезен для управления модулями «секвенсор нот» или «секвенсор ударных».
~interval~скорость продвижения
~sync~если выходной питч должен быть синхронизирован с глобальным транспортом
~start~высота звука в начале последовательности
~length~длина последовательности
~random~выводить случайные шаги в пределах диапазона, а не последовательные
~div~деление измерения при использовании "div" в качестве интервала



notechain~запуск ноты, за которой следует импульс для запуска другой ноты после задержки
~pitch~высота ноты
~trigger~играть примечание для этого узла цепочки
~velocity~скорость для ноты
~duration~длительность ноты, в тактах
~next~интервал до отправки импульса



notecanvas~зацикленный список нот
~quantize~выровнять выбранные ноты в интервал
~play~играть ноты на в поле
~rec~запись ввходящих нот
~free rec~включить режим записи и расширить холст, если мы дойдем до конца
~measure~длина лупа
~show chord intervals~показать скобки, чтобы указать взаимосвязь аккордов
~interval~интервал для квантования
~canvas~холст нот. элементы управления холстом:\n —Shift-щелкните, чтобы добавить ноту\n —удерживайте Shift и перетащите ноту, чтобы дублировать\n —удерживайте alt, чтобы перетащить ноту без привязки\n —удерживайте Ctrl при перетаскивании, чтобы привязать к интервалу\n —удерживайте Shift и прокрутите, чтобы увеличить\n —удерживать alt и захватить пустое пространство, чтобы переместить слайд холст\n —удерживайте Ctrl и захватите пустое пространство, чтобы увеличить холст
~timeline~точки контура управления
~delete~удалить выделенные элементы
~view rows~количество видимых строк
~clear~удалить все элементы
~drag mode~направление, в котором элементы можно перетаскивать
~scrollh~горизонтальная полоса прокрутки
~scrollv~вертикальная полоса прокрутки



midicontroller~получать MIDI-ввод с внешних устройств. Чтобы получить хорошее отображение в представлении «макет», создайте файл .json с тем же именем, что и ваш контроллер, чтобы описать макет вашего контроллера, и поместите его в каталог «data/controllers». посмотрите другие файлы в этом каталоге для примеров.
~controller~MIDI-устройство для использования
~mappingdisplay~какой вид отображения смотреть
~bind (hold shift)~когда это включено, вы можете сопоставить ввод MIDI с элементом управления пользовательским интерфейсом, наведя курсор на элемент управления пользовательского интерфейса, удерживая Shift, а затем используя желаемый ввод MIDI.
~page~выберите, какую страницу MIDI-элементов управления использовать. каждая страница действует как независимый MIDI-контроллер, поэтому вы можете использовать страницы, чтобы позволить одному MIDI-контроллеру переключаться между управлением многими вещами.
~add~добавить сопоставление вручную
~osc input port~порт для использования для входа в контроллер осциллографа
~messagetype~тип миди-сообщения
~control~шаг или элемент управления для обозначения
~channel~на какой канал обратить внимание
~path~путь к элементу управления, на который следует повлиять
~controltype~как этот элемент управления должен изменять цель.\n —slider: установить значение, интерполированное между "midi off" и "midi on" на значение ползунка\n —set: установить указанное значение непосредственно при нажатии этой кнопки\n —release: установить указанное значение непосредственно при отпускании этой кнопки\n —toggle: переключить значение элемента управления на включение/выключение при нажатии этой кнопки\n —direct: установить элемент управления на буквальное входное значение midi
~value~значение для установки
~midi off~нижняя граница диапазона midi. отправить это значение, когда целевой элемент управления выключен. если "scale" включен, это также контролирует нижний предел диапазона ползунка, и вы можете установить значение midi выше, чем midi, чтобы изменить направление ползунка.
~midi on~верхний предел среднего диапазона. отправить это значение, когда целевой элемент управления включен. если "scale" включен, это также контролирует верхний предел диапазона ползунка, и вы можете установить midi выше, чем midi, чтобы изменить направление ползунка.
~scale~следует ли масштабировать выходной сигнал этого ползунка midi между "midi off" и "midi on"?
~blink~при включении целевого элемента управления, отправляет чередующиеся сообщения включения/выключения, чтобы мигать соответствующий светодиод
~increment~когда "controltype" - "set" или "release", целевой элемент управления увеличивается на эту величину (а поле "value" игнорируется). когда «тип управления» - «ползунок», целевой элемент управления изменяется на эту величину в том направлении, в котором был изменен элемент управления (этот параметр полезен для «бесконечных кодировщиков»)
~twoway~следует ли отправлять обратную связь контроллеру? (для управления светодиодами, связанными с кнопкой/ручкой)
~feedback~на какую копию или примечание следует отправлять отзыв?
~pageless~должно ли это соединение работать на всех страницах мидиконтроллера?
~ x ~удалить это соединение
~copy~дублировать это соединение
~layout~какой файл макета мы должны использовать для этого контроллера? их можно создать в папке Documents/BespokeSynth/controllers.
~monome~какой моном мы должны использовать?



keyboarddisplay~отображает вводимые примечания на клавиатуре и позволяет нажимать на клавиатуре для создания примечаний



gridkeyboard~сеточная клавиатура, предназначенная в первую очередь для 64-клавишных контроллеров сетки.
~layout~стиль клавиатуры
~octave~базовая октава
~latch~нажатие клавиши защелки, поэтому вы нажимаете один раз, чтобы сыграть ноту, и нажмите еще раз, чтобы отпустить ноту
~arrangement~какой стиль макета мы должны использовать?
~ch.latch~нажатие кнопки фиксатора пояса
~p.root~для чордера, всегда воспроизводить корневую ноту
~grid~вставьте сетку из модуля "midicontroller"



fouronthefloor~посылает ноту 0 каждый удар, чтобы запустить бас-барабан
~two~отправляет ноту только каждые два удара



drumsequencer~пошаговый секвенсор, предназначенный для ударных. удерживайте Shift при перетаскивании по сетке, чтобы настроить скорость шага.
~str~скорость для использования при установке шага через контроллер сетки, если установлен флажок рядом с этим ползунком
~use str~если слайдер "str" должен использоваться для установки скорости
~measures~длина последовательности в тактах
~preset~выбор предустановки шаблона
~yoff~вертикальное смещение для отображения паттерна контроллером сетки
~offset~показать ползунки "смещения"
~repeat~повторять вводимые ноты с этой скоростью
~step~длина каждого шага
~column~текущий столбец, чтобы использовать для визуализации шага на MIDI-контроллере
~<~сдвинуть весь патерн на шаг раньше
~>~сдвинуть весь патерн на один шаг позже
~grid~вставьте сетку из модуля "midicontroller"
~velocity~вставляем сетку из модуля "midicontroller" для управления скоростью
~metastep~вставьте сетку из модуля "midicontroller" для управления "meta step". Я забыл, что это делает. Ой.
~rowpitch*~выходная высота тона для этой строки
~offset*~сдвиг строки вперед/назад по времени. попробуйте сделать барабаны немного раньше, тарелки — немного позже и т. д.
~randomize~рандомизировать последовательность
~r den~плотность вывода рандомизатора. чем он выше, тем более загруженным будет случайный вывод.
~r amt~шанс, что каждый шаг изменится при рандомизации. низкие значения изменят только небольшую часть последовательности, высокие значения заменят большую часть последовательности.



helpdisplay~отображает справочную информацию
~show tooltips~отображает эти подсказки. Вы также можете переключать их с помощью клавиши F1, и вы можете включить или выключить их по умолчанию в меню «Настройки».
~help page~какую страницу справочной информации отображать



multitrackrecorder~запись нескольких синхронизированных звуковых дорожек для записи на диск для микширования во внешней DAW
~record~запись ввода на треки
~bounce~записывать треки в каталог с записями
~add track~добавить дополнительный трек
~clear~очистить звук в дорожках



multitrackrecordertrack~трек в многодорожечном рекордере
~ X ~удалить этот трек



circlesequencer~полиритмический секвенсор, отображающий петлю в виде круга
~length*~количество шагов в этом круге
~note*~высота тона для этого круга
~offset*~смещение по времени для данного круга



wavehaper~wavehaping с выражениями
~y=~волновое выражение. попробуйте что-нибудь вроде «x + sin (x * pi * a)». доступные переменные: a, b, c, d, e = ползунок + sin (s ниже. t = время. x1, x2, y1, y2 = биквадратное хранилище состояний.
~rescale~изменяет масштаб ввода перед передачей его в выражение
~a~переменная для использования в выражениях
~b~переменная для использования в выражениях
~c~переменная для использования в выражениях
~d~переменная для использования в выражениях
~e~переменная для использования в выражениях



waveformviewer~отображение формы волны
~freq~частота для синхронизации дисплея. автоматически устанавливается, если вы вставляете нотный ввод в этот модуль
~length~количество семплов для захвата
~draw gain~регулировать масштаб отображения осциллограммы



vocodercarrier~подключается к модулям "vocoder" или "fftvocoder". отправьте синтезаторный звук в этот модуль, а голосовой звук - в модуль вокодера.



vocoder~вокодер на основе частотных диапазонов. он должен быть соединен с модулем "vocodercarrier". голос должен быть направлен в этот модуль, а синтезатор должен быть вставлен в vocodercarrier.
~input~усиление входного сигнала
~carrier~усиление несущего сигнала
~volume~усиление на выходе
~mix~сколько исходных входных и вокодированных сигналов нужно выводить
~max band~предел громкости для каждой полосы частот
~spacing~как должны быть разнесены полосы частот
~bands~сколько частотных диапазонов использовать
~f base~частота для самого нижнего диапазона
~f range~диапазон частот до самого высокого диапазона
~q~резонанс полос
~ring~сколько времени должны группы «остыть»



takerecorder~[брошенный модуль, возможно, сломан]
~start~[todo]



stutter~захватывает и заикается ввод
~grid~вставьте сетку из модуля "midicontroller"
~half note~заикание половины ноты
~quarter~четверть заикания
~8~8 нота заикание
~16~16 заикание
~32~32 нота заикание
~64~64 ноты заикания
~reverse~перевернутое заикание половины ноты
~ramp in~заикание с увеличением скорости от нуля до единицы
~rump out~заикание со скоростью, быстро падающей до нуля
~tumble up~ускорение заикания
~tumble down~замедление заикания
~half speed~заикание на половине скорости, низкий тон
~double speed~заикание на двойной скорости, высокий тон
~triplets~заикание на триплетном интервале
~dotted eighth~заикание на восьмом интервале с точками
~free~заикание с настройками, указанными следующими ползунками
~free length~длина в секундах для "free" режима заикания
~free speed~скорость для "free" режима заикания



splitter~разделяет стереосигнал на два монофонических сигнала или дублирует монофонический сигнал



spectrum~отображение спектральных данных аудиосигнала



signalclamp~фиксирует значение аудиосигнала в пределах диапазона
~min~минимальное выходное значение
~max~максимальное выходное значение



send~дублирует сигнал и отправляет его второму адресату
~amount~сумма для отправки правого кабеля
~crossfade~когда true, выход левого кабеля уменьшается по мере увеличения «суммы»



samplergrid~записывает ввод на пэды и воспроизводит пэды. предназначен для использования с 64-контактным контроллером сетки.
~passthrough~должен ли входящий звук проходить через выход?
~vol~выходная громкость
~clear~при включении очищает все нажатые квадраты сетки
~edit~включить элементы управления для настройки записанного сэмпла для последнего нажатого квадрата сетки
~duplicate~когда включено, дублирует последний нажатый сэмпл на любые нажатые квадраты сетки
~start~начало сэмпла
~end~конец сэмпла
~grid~вставьте сетку из модуля "midicontroller"



samplecapturer~[работа в процессе] записывает аудио в короткие клипы. запись начинается, когда звук превышает пороговое значение.
~record~мы должны записывать?
~play~воспроизвести этот клип
~save~сохранить этот клип в файл
~delete~очистить этот клип



ringmodulator~модулировать амплитуду сигнала на частоте
~freq~частота для использования. также может быть установлен путем исправления ввода примечания в этот модуль.
~dry/wet~какая часть исходного звука использовать по сравнению с модулированным звуком
~volume~объем выход
~glide~сколько времени потребуется вводной ноте, чтобы перейти к желаемой частоте



pitchchorus~выводит версию входного звука со сдвигом высоты тона, основанную на входных миди-нотах. Шаг 60 - используемый эталонный шаг.
~passthrough~должен ли исходный звук проходить?



panner~панорамирование звука влево и вправо. также преобразует моно вход в стерео выход.
~pan~количество для отправки сигнала в левый и правый каналы. значение 0,5 центрируется.
~widen~задерживать канал на это количество сэмплов. приводит к эффекту панорамирования, когда кажется, что звук исходит с определенного направления.



output~направить аудио сюда, чтобы отправить его на выходной канал (ваши динамики или аудиоинтерфейс)
~ch~канал (или каналы, если вы хотите стерео) для отправки звука на



multitapdelay~задержка с несколькими точками касания
~dry~сколько сухого сигнала пропускать
~display length~длина отображения буфера, в секундах
~delay * ~время задержки касания, в миллисекундах
~gain * ~величина задержки касания
~feedback * ~сколько аудио с задержкой от этого крана должно возвращаться на вход
~pan * ~стерео панорама для этого крана



looperrewriter~перезаписывает содержимое цикла с полученным вводом, чтобы помочь вам передискретизировать ваши собственные циклы. прикрепите серую точку к модулю "looper".\n\n  идеальный способ использования этого модуля — это подключить "looper" непосредственно к "send", а крайний левый выход "send" подключить к вашей обработке эффектов (как «цепочка эффектов»), подключите обработку эффекта к этому "rewriter", а затем также подключите крайний правый выход "send" к этому "rewriter".
~go~перепишите подключенный петлитель, и если этот петлитель подключен к отправке, установите, что отправка будет выводиться только на правый выход
~new loop~начать запись длины динамического цикла. нажмите "go", когда вы хотите переписать его в петлитель. это также изменит глобальный темп на заказ, чтобы он соответствовал этому новому циклу, так что он довольно мощный и страшный! щелкните его еще раз, чтобы отменить.



looperrecorder~командный центр для управления записью в несколько циклов и обеспечения обратной записи цикла (т. е. постоянно включенной записи)
~1~захватить последний такт в текущий выбранный лупер
~2~захватить последние 2 такта в текущий выбранный лупер
~4~захватить последние 4 такта в текущий выбранный лупер
~8~захватить последние 8 тактов в текущий выбранный лупер
~length~длина в тактах для использования, когда подключенные looper используют кнопку "commit"
~2xtempo~удвоить глобальный транспортный темп, сохраняя при этом одинаковое звучание подключенных луперов
~.5tempo~вдвое уменьшить глобальный темп транспорта, сохраняя при этом одинаковое звучание подключенных луперов.
~target~лупер для фиксации звука при использовании кнопок захвата в буфере слева
~mode~режим записывающего устройства: используйте «запись» для записи ввода и разрешите его сохранение в буферах, когда вы будете готовы к циклу, используйте «наложение» для записи ввода и воспроизведите цикл с заданной длиной и используйте «цикл» для воспроизведения текущего цикла без добавления ввода
~clear~очистить записанный буфер
~free rec~позволяет начать запись цикла без заранее определенной длины. отключите, чтобы завершить запись, отрегулируйте глобальный транспорт, чтобы он соответствовал длине лупа, и переключите режим рекордера на "loop"
~cancel free rec~если включена "free rec", отменить запись без установки длины цикла
~orig speed~сбросить лупер на темп, в котором лупы были записаны с
~snap to pitch~привязка темпа к ближайшему значению, соответствующему тональности
~resample~пересэмплировать все подключенные луперы в новый темп
~resample & set key~snap tempo to nearest value that matches a key (based upon the current key and the tempo change), resample all connected loopers to that new tempo, and change global scale to the new key



looper~вход петли аудио. для полной функциональности используйте "looprecorder".
~num bars~длина петли в тактах
~clear~очистить звук петли
~volume~выходная громкость
~b~запечь текущий объем в форму волны
~ m ~взять содержимое этого лупера и объединить его с другим. нажмите эту кнопку на источнике слияния, затем на цели слияния.
~decay~уменьшить громкость в каждом цикле
~save~сохранить этот цикл в файл wav
~mute~отключить этот лупер
~commit~зафиксировать текущий буфер записывающего устройства в этот цикл
~capture~когда начинается следующий цикл, записывать ввод на время цикла
~write~записать входной звук в буфер цикла
~swap~поменять местами содержимое этого лупера и другого. нажмите эту кнопку на двух петлителях, чтобы поменять их местами.
~copy~возьмите содержимое этого петлителя и скопируйте его на другой. нажмите эту кнопку на источнике копирования, затем на целевом объекте копирования.
~2x~сделать воспроизведение петли с удвоенной скоростью
~.5x~воспроизведение цикла на половинной скорости
~undo~отменить фиксацию последнего цикла
~offset~величина для смещения точки воспроизведения петлителя от транспортного положения
~set~сдвинуть содержимое петлителя так, чтобы текущее смещение было началом буфера
~scrspd~скорость воспроизведения, используемая с "scr" включена. быстро модулируется для создания эффекта царапания, напоминающего винил.
~scr~разрешить очистку цикла, регулируя "scrspd"
~fourtet~использовать текстурный трюк, который я однажды видел на видео с четырьмя тетрами: нарезать звук на фрагменты, и для каждого фрагмента его с удвоенной скоростью, а затем воспроизвести его в обратном направлении с удвоенной скоростью. этот ползунок регулирует микширование между исходным звуком и этим «четырехтефицированным» звуком.
~fourtetslices~размер блока для использования для эффекта "fourtet"
~beatwheel on~[none]
~beatwheel pos right~[none]
~beatwheel depth right~[none]
~beatwheel pos left~[none]
~beatwheel depth left~[none]
~beatwheel single measure~[none]
~pitch~количество выходного сигнала петлителя смещения высоты тона
~auto~должен ли сдвиг высоты тона автоматически регулироваться при изменении темпа транспорта?
~resample for tempo~эта кнопка появляется, когда текущий глобальный темп больше не соответствует темпу, в котором был записан буфер. щелкните по нему, чтобы изменить размер буфера в соответствии с новым темпом.



lissajous~нарисуйте входной звук в виде кривой Лиссажу. отключите «автокорреляцию» в меню треугольника модуля, чтобы использовать стереоканалы для отображения ширины стереозвука.
~scale~визуальный масштаб изображения Лиссажу



inverter~умножьте сигнал на -1. позволяет использовать некоторые довольно интересные эффекты при использовании с send, чтобы вычесть части сигналов при рекомбинации.



input~получить звук из источника входного сигнала, например микрофона
~ch~какой канал (или каналы, если вы хотите стерео) использовать



freqdelay~эффект задержки с задержкой(delay) зависимой от входящих нот
~dry/wet~сколько эффекта применить



fftvocoder~вокодер на основе БПФ(что это такое вообще?:))
~вход~усиление входного сигнала
~carrier~усиление несущего сигнала
~volume~усиление на выходе
~dry/wet~сколько исходных входных vs вокодированных сигналов на выходе
~fric thresh~фрикционная чувствительность обнаружения, для переключения между использованием сигнала несущей и белого шума для вокодирования
~whisper~насколько частичные фазы несущего сигнала должны быть рандомизированы, что влияет на шепотность выходного звука
~phase off~насколько мы должны смещать фазу частичных сигналов несущей
~cut~сколько басовых частичек удалить



feedback~подает задержанный звук обратно на более ранний этап сигнальной цепи. используйте коннектор «выход обратной связи» для отправки аудио вверх по цепочке, а основной выходной коннектор для отправки полученного аудиосигнала вперед. использование обратной связи часто может привести к экстремальным и трудно поддающимся контролю результатам!
~limit~обрезать звук обратной связи до этого диапазона, чтобы избежать проблем с слишком сильным выходом обратной связи.



eq~многополосный эквалайзер, для регулировки выходных уровней в частотных диапазонах
~enabled*~включить эту полосу?
~type*~какой тип фильтра должен использовать этот бэнд
~f*~частота среза для этой полосы
~g*~усиление для этой полосы
~q*~резонанс для этой полосы



effectchain~контейнер для хранения списка эффектов, применяемых последовательно. эффекты можно легко изменить с помощью кнопок < и > и удалить с помощью кнопки x. удерживайте Shift, чтобы открыть кнопку x для всех эффектов.
~volume~усиление на выходе
~effect~выберите, какой эффект добавить
~spawn~создать текущий выделенный эффект
~exit effect~на push2, возврат управления эффектами к основным элементам управления цепочкой эффектов
~ < ~ переместить этот эффект на более раннюю позицию в цепочке
~ > ~переместить этот эффект на более позднюю часть цепочки
~x~удалить этот эффект
~mix*~влажный/сухой слайдер для этого эффекта



basiceq~простой многополосный эквалайзер
~even~сбросить эквалайзер



biquad~фильтр с использованием формулы biquad
~type~тип фильтра
~F~частота среза
~Q~резонанс
~G~усиление



bitcrush~уменьшить разрешение и частоту дискретизации для эффектов lo-fi
~crush~уменьшение разрешения сэмпла
~downsamp~уменьшение частоты дискретизации



butterworth~фильтр с использованием формулы Баттуорта
~F~частота среза
~Q~резонанс



compressor~старайтесь поддерживать громкость на определенном уровне
~mix~степень сжатия. уменьшите это значение для эффекта «параллельного сжатия». вы должны использовать этот ползунок микширования вместо ползунка микширования цепочки эффектов, чтобы компенсировать опережающий просмотр.
~threshold~порог, с которого следует начать снижение усиления
~ratio~насколько интенсивно снижать усиление, когда сингл переходит порог
~attack~скорость, чтобы применить снижение усиления
~release~скорость, чтобы убрать снижение усиления
~lookahead~сколько времени нужно «смотреть вперед», чтобы отрегулировать огибающую сжатия. это обязательно вводит задержку в ваш вывод, которую можно было бы компенсировать, запустив секвенсоры немного раньше.
~output~усиление, для увеличения громкости



dcremover~фильтр верхних частот с отсечкой 10 Гц для удаления смещения постоянного тока, чтобы сигнал не уходил от нуля



delay~задержка эха
~delay~задержка в миллисекундах
~amount~сумма задержки, которая возвращается
~interval~устанавливает длину задержки в соответствии с музыкальной продолжительностью
~ярлык~ярлык для уменьшения диапазона ползунка задержки, чтобы обеспечить слышимые задержки и звуки гребенчатого фильтра
~dry~должен ли проходить сухой сигнал или только сигнал с задержкой?
~feedback~должен ли выходной аудиосигнал возвращаться в задержку?
~input~должны ли мы принимать ввод в задержку?
~invert~Должен ли сигнал задержанного аудио быть инвертированным? это может дать другой звук, а также отменить смещение постоянного тока, чтобы предотвратить его накопление с обратной связью.



distortion~волновое искажение
~type~применяемый стиль искажения
~clip~точка отсечки искажения, более низкие значения приводят к более сильному искажению
~preamp~усиление сигнала перед подачей искажений
~fuzz~сдвинуть входной сигнал с центра для асимметричного искажения
~center input~убрать смещение постоянного тока из входного сигнала для более контролируемого искажения



formant~[незавершенный, сломанный] фильтр, ориентированный на управление формантами
~ee~[todo]
~oo~[todo]
~я~[todo]
~e~[todo]
~u~[todo]
~a~[todo]



freeverb~реверберация с использованием алгоритма "freeverb"
~room size~регулирует длину реверберации, более высокое значение означает более длительную реверберацию
~damp~затухание на высоких частотах; значение нуля означает, что все частоты затухают с одинаковой скоростью, в то время как более высокие настройки приведут к более быстрому затуханию высокочастотного диапазона.
~wet~количество сигнала реверберации
~dry~количество нетронутого сигнала
~width~стерео ширина реверберации



gainstage~регулировка громкости в цепочке эффектов
~gain~множитель громкости



gate~разрешает сигнал только тогда, когда он превышает определенный порог. полезно для устранения линейного шума или просто как эффект.
~threshold~порог громкости, чтобы открыть гейт
~attack~скорость, с которой врата открываются
~release~скорость, с которой ворота закрываются



granulator~гранулят в режиме реального времени
~overlap~количество перекрывающихся зерен
~speed~скорость воспроизведения зерна
~len ms~длина каждого зерна в миллисекундах
~dry~количество сухого сигнала, пропускаемого через
~autocapture~заморозить ввод на этом интервале
~pos r~рандомизация начальной точки зерна
~spd r~рандомизация скорости зерна
~spa r~рандомизация времени между зернами
~frz~заморозить текущий записанный буфер
~g oct~должны ли мы добавлять октавы и квинты?
~width~стерео ширина размещения зерна
~pos~позиция воспроизведения в буфере



muter~заглушить входящий сигнал
~pass~если true, сигнал разрешен через
~ms~время нарастания сигнала для отключения/включения звука



noisify~умножить входной сигнал на белый шум
~amount~количество шума для применения
~width~как часто следует выбирать новый образец шума



pitchshift~сдвигает высоту звука сигнала
~ratio~величина сдвига высоты тона на (значение 1 означает отсутствие сдвига)
~ratioselector~ярлыки для полезных соотношений высоты тона



pumper~ритмично уменьшайте громкость сигнала, чтобы имитировать эффект "pumping sidechain"
~amount~количество для уменьшения громкости
~length~длина насоса
~curve~как возвращается объем
~attack~как резко падает громкость
~interval~скорость перекачки



tremolo~ритмично модулируйте громкость сигнала
~amount~количество для уменьшения громкости
~offset~смещение фазы LFO
~duty~длительность импульса LFO
~interval~скорость LFO
~osc~Тип генератора LFO



dcoffset~добавить постоянное смещение к звуковому сигналу
~offset~величина смещения для добавления



autotalent~[брошенный модуль, возможно, сломанный] автонастройка с использованием кода "autotalent"
~A~[todo]
~Bb~[todo]
~B~[todo]
~C~[todo]
~Db~[todo]
~D~[todo]
~Eb~[todo]
~E~[todo]
~F~[todo]
~Gb~[todo]
~G~[todo]
~Ab~[todo]
~amount~[todo]
~smooth~[todo]
~shift~[todo]
~scwarp~[todo]
~lfoamp~[todo]
~lforate~[todo]
~lfoshape~[todo]
~lfosymm~[todo]
~lfoquant~[todo]
~formant correct~[todo]
~fwarp~[todo]
~mix~[todo]
~set from scale~[todo]



audiorouter~селектор для переключения, куда направляется звук. подключиться к целям, чтобы добавить их в список.
~route~аудио назначения



audiometer~устанавливает ползунок на уровень громкости звука. полезно для сопоставления отображаемого значения midi с.
~level~уровень входного аудиосигнала. подключите его к MIDI-контроллеру со светодиодным дисплеем, чтобы увидеть значение, отображаемое на вашем контроллере.



signalgenerator~сигнал основного генератора
~freq~частота сигнала
~freq mode~какой режим использовать для ввода нот? "instant" изменяет частоту входной ноты мгновенно, "ramp" нарастает до частоты с течением времени, а "slider" позволяет использовать ползунок для интерполяции между двумя последними входными нотами.
~osc~тип генератора
~pw~ширина импульса (или форма для непрямоугольных волн)
~slider~ползунок для интерполяции между последними двумя входными тонами
~ramp~время нарастания до входной частоты
~sync~включает режим «синхронизации» для сброса фазы на частоте syncf
~syncf~частота для сброса фазы, когда включена «синхронизация»
~soften~смягчить края прямоугольных и пилообразных сигналов
~shuffle~растягивает и сжимает каждый второй цикл формы волны
~mult~множитель частоты
~phase~сдвиг фазы
~vol~выходная громкость
~detune~величина расстройки от указанной частоты



seaofgrain~гранулированный синтезатор, воспроизводимый с помощью ползунков или вход MPE
~load~загрузить файл
~record~ввод записи в качестве гранулированного буфера, чтобы использовать seaofgrain как гранулярную задержку в реальном времени
~volume~выходная громкость
~offset~сдвиг начала сэмпла
~display length~отображаемая длинна сэмпла
~keyboard base pitch~высота миди, представляющая начало сэмпла
~keyboard num pitches~количество шагов, назначаемых по сэмплу
~gain *~громкость этого голоса
~pos *~позиция этого голоса в семпле
~overlap *~количество перекрывающихся зерен
~speed *~скорость воспроизведения зерна
~len ms *~длина каждого зерна в миллисекундах
~pos r *~рандомизация начальной точки зерна
~speed r*~рандомизация скорости зерна
~spacing r*~рандомизация времени между зернами
~octaves *~должны ли мы добавлять октавы и квинты?
~width *~стерео ширина размещения зерна
~pan *~стереопанорама размещения зерна



sampler~очень простой полифонический проигрыватель сэмплов и записывающее устройство. отправить звук и использовать ввод нот для воспроизведения записанного звука.
~vol~выходная громкость
~env~огибающяя громкости
~envA~подъем огибающей громкости
~envD~спад огибающей громкости
~envS~задержка огибающей громкости
~envR~затухание огибающей громкости
~rec~позволяет очистить текущую запись и записать новый звук при достижении входного порога
~thresh~когда запись включена, превысите этот порог с входным звуком, чтобы начать запись
~pitch~стоит ли пытаться исправить звук?
~passthrough~должен ли входной звук проходить во время записи?



sampleplayer~воспроизведение сэмплов с запускаемыми ключевыми точками, извлечением клипов и функцией поиска/загрузки на YouTube. увеличьте размер этого модуля, чтобы получить доступ к дополнительным функциям. если у вас есть URL-адрес YouTube в буфере обмена, появится кнопка, позволяющая загрузить аудио.
~volume~громкость на выходе
~speed~текущая скорость воспроизведения
~yt:~поиск этой строки на YouTube
~play~начать воспроизведение с текущего курсора воспроизведения
~pause~приостановить воспроизведение и оставить точку воспроизведения на месте
~stop~остановить воспроизведение и сбросить точку воспроизведения
~loop~переносить точку воспроизведения в начало, когда она достигает конца
~load~выборать файл для загрузки сэмпла
~save~сохранить этот сэмпл в файл
~record~записывать входной аудиосигнал в наш буфер сэмплов. очищает текущий сэмпл.
~trim~отбросить весь звук за пределами текущего диапазона масштабирования
~youtube~загрузить аудио с URL-адреса YouTube, который находится в буфере обмена
~cue start~начальная точка в секундах от текущей cue
~cue len~длина текущей cue в секундах. нулевое значение будет воспроизводиться до конца сэмпла.
~cue speed~скорость воспроизведения текущей cue
~cuepoint~устанавливает текущую cue для редактирования
~click sets cue~если true, нажатие на форму волны установит начальную позицию текущей cue
~select played~когда true, любая точка метки, воспроизводимая через входящие ноты, станет текущей меткой
~play cue~воспроизвести текущую cue
~show grid~показать сетку четвертной ноты (при достаточно большом увеличении)
~4~автоматическое нарезание 4 части
~8~автоматическое нарезание 8 частей
~16~автоматическое нарезание 16 частей
~32~автоматическое нарезание 32 части
~searchresult*~нажмите, чтобы загрузить этот результат поиска на YouTube. загрузка длинных видео может занять некоторое время.
~append to rec~при записи, добавить к предыдущей записи, а не сначала очищать сэмпл
~record as clip~во время записи записывать только тогда, когда достаточно ввода, чтобы открыть ворота, и отмечать каждый записанный сегмент метками
~threshold~порог громкости, чтобы открыть ворота для записи
~attack~скорость, с которой врата открываются
~release~скорость, с которой ворота закрываются
~playhovered~сыграть эту реплику
~grabhovered~возьмите сэмпл этой реплики, чтобы перенести ее на другой модуль



samplecanvas~инструмент компоновки семплов
~measures~длина рабочего поля в мерах(или километрах? :))
~interval~интервал деления сетки
~canvas~рабочее поле сэмплов. перетащите сюда сэмплы. элементы управления рабочим полем:\n — удерживайте Shift и перетащите сэмпл для дублирования\n — удерживайте alt, чтобы перетащить сэмпл без привязки\n — удерживайте Ctrl при перетаскивании, чтобы привязать к интервалу\n — удерживайте shift и прокрутите для увеличения\n — удерживайте alt и захватите пустое пространство, чтобы переместить рабочее пространство\n — удерживая Ctrl, захватите пустое пространство, чтобы увеличить рабочее пространство
~timeline~управление границами лупа на таймлайне
~scrollh~горизонтальная полоса прокрутки
~scrollv~вертикальная полоса прокрутки
~delete~удалить выделенные элементы
~view rows~количество видимых строк
~clear~удалить все элементы
~drag mode~направление, в котором элементы можно перетаскивать



oscillator~полифонический осциллятор с огибающей. модуляции (с поддержкой MPE): колесо модуляции закрывает фильтр дальше (если фильтр включен), давление уменьшает величину расстройки
~osc~тип генератора
~mult~умножить частоту входящего тона
~pw~ширина импульса (или форма для непрямоугольных волн)
~shuffle~растягивает и сжимает каждый второй цикл формы волны
~soften~смягчить края прямоугольных и пилообразных сигналов
~phase~фазовый сдвиг генератора и фазовое смещение между унисонными голосами. полезно подключать к очень быстрому модулятору для достижения фазовой модуляции.
~sync~включает режим «синхронизации» для сброса фазы на частоте синхронизации.
~syncf~частота для сброса фазы, когда включена «синхронизация»
~env~[нет]
~envA~подъем огибающей громкости
~envD~спад огибающей громкости
~envS~задержка огибающей громкости
~envR~затухание огибающей громкости
~vol~громкость этого осциллятора
~detune~ когда унисон равен 1, настраивает осциллятор на эту величину. когда унисон равен 2, один осциллятор настроен нормально, а другой расстраивается на эту величину. когда унисон> 2, осцилляторы случайным образом расстраиваются в этом диапазоне.
~unison~сколько осцилляторов играют одну ноту
~width~контролирует панорамирование голосов с унисоном больше 1
~adsr len~длина просмотра элементов управления ADSR-огибающей
~envfilter~[none]
~envfilterA~подъем огибающей фильтра
~envfilterD~спад огибающей фильтра
~envfilterS~задержка огибающей фильтра
~envfilterR~затухание огибающей фильтра
~fmax~частота среза фильтра нижних частот на максимуме огибающей. установите этот ползунок на максимум, чтобы отключить фильтр
~fmin~частота среза фильтра нижних частот на минимуме огибающей
~q~резонанс ФНЧ
~vel2vol~насколько скорость на входе должна влиять на громкость на выходе?
~vel2env~насколько входная скорость должна влиять на скорость громкости и огибающих фильтра?
~lite cpu~пересчитывает некоторые параметры только один раз для каждого буфера, чтобы снизить нагрузку на процессор. может ухудшить изменение высоты звука и звук быстрой модуляции в некоторых случаях.



metronome~пикает в такт
~vol~громкость метронома



karplusstrong~полифонический струнный синтезатор для физического моделирования
~vol~громкость на выходе
~invert~должна ли обратная связь инвертировать?
~filter~количество для фильтрации резонанса
~feedback~количество обратной связи для резонанса
~source type~звук, используемый для возбуждения
~x freq~частота возбуждения звука
~x att~затухание во времени для звука возбуждения
~x dec~время затухания звука возбуждения
~vel2vol~насколько скорость должна влиять на громкость голоса
~vel2env~сколько скорости должно влиять на время атаки возбуждения
~pitchtone~регулирует влияние высоты тона на величину фильтра. значение нуля дает равномерную фильтрацию по всему диапазону высоты тона, более высокие значения фильтруют низкие частоты меньше, низкие значения фильтруют низкие частоты меньше.
~lite cpu~пересчитывает некоторые параметры только один раз для каждого буфера, чтобы снизить нагрузку на процессор. в некоторых сценариях может ухудшить изменение высоты тона и звук быстрой модуляции.



lfo~модулирует слайдер с помощью низкочастотного генератора
~enable~включить/выключить модуляцию
~pin~сделать окно LFO видимым
~interval~длина периода колебаний
~osc~тип колебательного сигнала
~offset~фазовое смещение, чтобы сделать колебание раньше/позже
~free rate~скорость работы генератора в несинхронизированное время
~low~выходное значение в нижней точке сигнала
~hight~выходное значение в верхней точке формы волны
~spread~расширение формы волны, чтобы быть ближе к нижней и верхней точкам
~bias~смещение формы волны в сторону нижней или верхней точки
~length~доля времени, которая должна быть потрачена на цикл формы сигнала
~shuffle~настройте волновую форму для быстрого и медленного цикла
~soften~сгладить резкие края прямоугольных и пилообразных сигналов
~lite cpu~пересчитывает некоторые параметры только один раз для каждого буфера, чтобы снизить нагрузку на процессор. в некоторых сценариях может звучать хуже, особенно при быстрой модуляции.



fmsynth~полифонический fm-синтезатор
~adsrosc~
~adsroscA~
~adsroscD~
~adsroscS~
~adsroscR~
~adsrharm~
~adsrharmA~
~adsrharmD~
~adsrharmS~
~adsrharmR~
~adsrmod~
~adsrmodA~
~adsrmodD~
~adsrmodS~
~adsrmodR~
~adsrharm2~
~adsrharm2A~
~adsrharm2D~
~adsrharm2S~
~adsrharm2R~
~adsrmod2~
~adsrmod2A~
~adsrmod2D~
~adsrmod2S~
~adsrmod2R~
~Humratio~отношение гармоник модулятора первого порядка к входной высоте тона
~harratio2~отношение гармоник модулятора второго порядка к входному питчу
~tweak~отношение множителя к гармонике для модулятора первого порядка
~mod~количество для модуляции модулятора первого порядка
~tweak2~отношение множителя к гармонике для модулятора второго порядка
~mod2~количество для модуляции модулятора второго порядка
~vol~выходная громкость
~phase0~сдвиг фазы для базового генератора
~phase1~сдвиг фазы для модулятора первого порядка
~phase2~фазовый сдвиг для модулятора второго порядка



drumsynth~осциллятор+шумовой драм-синтезатор
~vol~выходная громкость
~edit~показывает параметры каждого hit
~adsrtone*~
~adsrtone*A~
~adsrtone*D~
~adsrtone*S~
~adsrtone*R~
~vol*~громкость осциллятора
~adsrnoise*~
~adsrnoise*A~
~adsrnoise*D~
~adsrnoise*S~
~adsrnoise*R~
~noise*~громкость шума
~type*~тип осциллятора
~adsrfreq*~
~adsrfreq*A~
~adsrfreq*D~
~adsrfreq*S~
~adsrfreq*R~
~freqmax*~начальная частота генератора
~freqmin*~конечная частота генератора
~adsrfilter*~
~adsrfilter*A~
~adrfilter*D~
~adsrfilter*S~
~adrfilter*R~
~cutoffmax*~начальная частота среза фильтра
~cutoffmin*~конечная частота среза фильтра
~q*~резонанс фильтра



drumplayer~проигрыватель сэмплов, предназначенный для воспроизведения ударных
~vol~выходная громкость
~speed~глобальный множитель скорости выборки
~speed rnd~величина рандомизации глобальной скорости выборки
~kit~[none]
~edit~показать площадки для редактирования
~aud~прокрутите до сэмплов прослушивания в текущей категории заголовка пэда или к каталогу, который был последний раз помещен на пэд
~mono~принудительный выход в моно
~shuffle~random — это сэмплы, скорости и панорамы
~grid~вставьте сетку из модуля "midicontroller"
~quantize~квантовать вход в этот интервал
~repeat~при квантовании должны ли удерживаемые ноты повторяться с этим интервалом?
~vol *~громкость сэмпла
~speed *~скорость сэмпла
~pan *~стереопозиция панорамирования сэмпла
~widen *~стереозадержка семпла для создания ширины
~start *~начальное смещение в процентах от выборки
~single out *~должен ли семпл иметь свой собственный индивидуальный выход?
~linkid *~если linkid не равен -1, отключить любой другой сэмпл с совпадающим linkid (полезно для связывания открытых и закрытых hats)
~envelope *~следует ли применять к сэмплу огибающую громкости?
~view ms *~длина просмотра огибающей в миллисекундах
~hitcategory*~папка для выбора при нажатии кнопки "random". эти папки находятся в каталоге data/drums/hits/
~envelopedisplay *~[none]
~envelopedisplay *A~нарастание огибающей
~envelopedisplay *D~затухание огибающей
~envelopedisplay *S~задержка огибающей
~envelopedisplay *R~затухание огибающей
~test *~воспроизвести этот сэмпл
~random *~выбрать случайный сэмпл из выбранной категории ударных



beats~multi-loop player, для смешивания слоев сэмплов вместе
~volume*~объем слоя
~filter*~слой-фильтр. отрицательные значения вводят низкие частоты, положительные значения - высокие.
~pan*~панорама слоя
~double*~включить воспроизведение с удвоенной скоростью
~bars *~сколько тактов имеют сэмплы в этом слоте?
~selector*~какой сэмпл мы должны проиграть в этом слоте? перетащите сюда сэмплы, чтобы добавить их в этот слот.



whitekeys~переназначить белые клавиши, которые соответствуют мажорной шкале C, чтобы вместо этого воспроизвести текущую глобальную шкалу



volcabeatscontrol~выводит MIDI-данные для управления различными аспектами драм-машины KORG volca beats
~clap speed~
~clave speed~
~agogo speed~
~crash speed~
~stutter time~
~stutter depth~
~tom decay~
~closed hat decay ~
~open hat decay ~
~hat grain ~
~level * ~



vibrato~добавление ритмичных колебаний высоты звука к нотам
~vibrato~величина изменения высоты звука для добавления
~vibinterval~скорость колебания высоты тона



velocitystepsequencer~регулирует скорость входящих нот на основе последовательности
~interval~скорость для продвижения последовательности
~len~длина последовательности
~downbeat~должны ли мы сбрасывать последовательность каждую мизерную долю?
~vel*~скорость для этого шага



velocitysetter~установить это значение для скорости ноты
~vel~скорость для использования
~rand~randomness для уменьшения выходной скорости на



velocityscaler~увеличение или уменьшение скорости ноты
~scale~сумма умножения скорости на



unstablepressure~изменение давления MPE с шумом Перлина
~amount~количество мутаций
~warble~медленная скорость мутации слоя
~noise~скорость быстро-более поздних мутаций



unstablepitch~изменение высоты тона MPE с шумом Перлина
~amount~количество мутаций
~warble~медленная скорость мутации слоя
~noise~скорость быстро-более поздних мутаций



unstablemodwheel~мутировать слайд MPE с шумом Перлина
~amount~количество мутаций
~warble~медленная скорость мутации слоя
~noise~скорость быстро-более поздних мутаций



sustainpedal~сохраняет входные ноты сустейн
~sustain~должны ли мы удерживать входные ноты?



scaledetect~определяет, какие гаммы подходят для потока входящих нот. последняя сыгранная высота используется как кореневая.
~reset~сбросить входную коллекцию нот
~matches~подходящие размеры для этого корневой ноты



scaledegree~транспонировать ввод на основе текущего масштаба
~degree~количество для транспонирования
~retrigger~немедленно воспроизводить текущие ноты при изменении количества транспонирования



quantizer~ввод задержки до следующего интервала квантования
~quantize~интервал квантования
~repeat~при удерживании ноты, должны ли мы повторять ее каждый интервал?



previousnote~при получении ноты выводит предидущую ноту



pressuretovibrato~принимает входной сигнал модуляции давления midi и меняет его на вибрато, используя изменение высоты тона
~vibrato~количество вибрато
~vibinterval~скорость вибрато



pressuretomodwheel~принимает входной сигнал модуляции давления midi и изменяет его на модуляцию Modwheel



pressure~добавить модуляцию давления к нотам
~pressure~величина давления



portamento~позволяет воспроизводить только одну ноту за раз и использует изменение высоты звука для плавного перехода между нотами
~require held~если включено,скользит к новой ноте только в том случае, если удерживается старая нота. в противном случае всегда скользите, основываясь на предыдущей введенной ноте.
~glide~время скольжения в миллисекундах



pitchsetter~устанавливает для входящей ноты указанную высоту тона
~pitch~используемая высота



pitchremap~переназначение входных тонов на разные выходные тона
~from*~какой тон изменить
~to*~желаемый тон



pitchpanner~добавление модуляции панорамы к нотам на основе входной высоты звука, поэтому низкие частоты панорамируются в одном направлении, а высокие - в другом.
~left~высота, представляющая полное левое панорамирование
~right~высота, представляющая полное правое панорамирование



pitchdive~используйте pitchbend, чтобы установить входную высоту тона от начального смещения
~начало~полутоновое смещение для начала
~time~время в миллисекундах для перехода от смещения высоты тона к входной высоте тона



pitchbender~добавление высоты тона к нотам
~bend~величина изгиба в полутонах



notewrap~обернуть входную высоту тона, чтобы оставаться в желаемом диапазоне
~min~нижняя часть диапазона высоты тона
~range~количество полутонов перед оборотом до минимальной высоты тона



notestrummer~отправьте аккорд в это и переместите ползунок, чтобы сыграть каждую ноту аккорда
~strum~перемещайте ползунок мимо каждой ноты, чтобы играть на ней



notestream~показывает поток нот по мере их воспроизведения
~reset~сбросить диапазон высоты тона



notesorter~отдельные ноты по высоте. любые неотмеченные участки проходят через стандартную розетку.
~pitch *~pitch для этой розетки



noterouter~позволяет вам контролировать, куда направляются ноты, с помощью элемента управления пользовательского интерфейса. чтобы добавить пункты назначения в список, запатчите их как цель
~route~модуль назначения noterouter



noteratchet~быстро повторять введенную ноту в течение определенного времени
~duration~общая продолжительность повтора должна длиться
~subdivision~длина каждого повтора



noterangefilter~пропускает ноты только в определенном диапазоне высоты тона
~min~минимальный допустимый шаг
~max~максимально допустимый шаг
~wrap~вместо того, чтобы отклонять ноты за пределами этого диапазона, должны ли мы вместо этого переносить их в диапазон?



notepanrandom~устанавливает панораму ноты на случайные значения для внутренних синтезаторов, поддерживающих панорамирование нот
~spread~величина случайного разброса
~center~центральное положение панорамирования



notepanner~устанавливает панораму ноты для внутренних синтезаторов, поддерживающих панорамирование нот
~pan~положение панорамирования, 0,5 по центру



notepanalternator~устанавливает панораму ноты, чередуя два значения, для внутренних синтезаторов, поддерживающих панорамирование нот
~one~позиция панорамирования, 0,5 по центру
~two~положение панорамирования, 0,5 по центру



noteoctaver~транспонирование ноты по октавам
~octave~количество октав для повышения или понижения



notelatch~использует ноты в сообщениям для включения и выключения нот



notehumanizer~добавить случайности к таймингу и скорости
~time~количество случайных временных интервалов в миллисекундах.
~velocity~величина случайности скорости



notehocket~отправляет ноты случайным адресатам
~weight *~шанс, что нота попадет в этот пункт назначения



notegate~разрешить или запретить прохождение нот
~open~если разрешено прохождение нот



noteflusher~отправить note-off для всех нот
~flush~щелкните, чтобы очистить ноты



notefilter~разрешить только определенные тональности через
~C-2 (0)~
~C#-2 (1)~
~D-2 (2)~
~D#-2 (3)~
~E-2 (4)~
~F-2 (5)~
~F#-2 (6)~
~G-2 (7)~



notableuration~устанавливает продолжительность воспроизведения ноты, игнорируя сообщение об отключении ноты
~duration~длина ноты в тактах



noteisplayer~показать информацию о входящей ноте



notedelayer~задержка ввода нот на указанную величину
~delay~время задержки в тактах



notechance~пропускает ноты случайным образом
~chance~вероятность того, что нота пройдет



mpetweaker~настроить входящие значения модуляции MPE
~pitchbend mult~количество для умножения входящего питчбенда
~pitchbend offset~величина смещения входящего изменения высоты звука
~pressure mult~количество для умножения входящего давления
~pressure offset~величина смещения входящего давления
~modwheel mult~количество для умножения входящего колеса модуляции
~modwheel offset~величина смещения входящего колеса модуляции



mpesmoother~[no tooltip]
~pitch~величина для сглаживания входящего изменения высоты звука
~pressure~величина для сглаживания входящего давления
~modwheel~количество для сглаживания входящего колеса модов



modwheeltovibrato~конвертировать ноты, колесо модуляции, входное ритмическое изменение высоты тона
~vibrato~величина изменения высоты звука
~vibinterval~скорость вибрато



modwheeltopressure~меняет вход выражения на давление midi на выходе



modwheel~добавляет значение выражения к ноте
~modwheel~уровень выражения



modulationvizualizer~отображение значений модуляции MPE для нот



midioutput~отправить midi на внешнее устройство, например на оборудование или другое программное обеспечение
~controller~куда отправлять миди



midicc~выводит сообщения об изменении управления midi для маршрутизации в модуль "midioutput"
~control~Контрольный номер CC
~value~выводит значение CC при его изменении



samplebrowser~файловый браузер для поиска сэмплов на диске. можно перетаскивать файлы сэмплов отсюда в нужные вам места (сэмплер, барабанщик, Seaofgrain и т. д.)
~ < ~ предыдущая страница
~ > ~следующая страница



linnstrumentcontrol~[незавершенная работа] различными способами управлять подсветкой контроллера linnstrument
~controller~мидиконтроллер с linnstrument
~decay~время, необходимое для того, чтобы зажженный ключ погас
~blackout~выключить все огни
~octaves~при нажатии клавиши следует зажигать эту клавишу для всех октав?
~guitar lines~должны ли мы использовать схему освещения "гитарные линии"?



gridnotedisplayer~используется с сеткой клавиатуры для отображения проигрываемых в данный момент нот, для визуализации аккордов, арпеджио и т. д.



chordholder~удерживает любые ноты нажатыми одновременно с сустейном, пока не будут нажаты новые ноты
~stop~остановить воспроизведение нот
~pulse to play~при включении входные ноты не воспроизводятся немедленно, а вместо этого ждут входного импульса перед воспроизведением



chorder~берет входящую высоту и играет дополнительные ноты, чтобы сформировать аккорды
~diatonic~должна ли сетка быть хроматической или привязанной только к гамме?
~chord~аккордовые пресеты
~inversion~инверсия пресетов



chorddisplayer~показать, какой аккорд играет, в контексте текущей гаммы



capo~сдвигает входящие ноты на полутона
~capo~количество полутонов для сдвига
~retrigger~немедленно воспроизводить текущие ноты при изменении количества каподастра



arpeggiator~арпеджиат удерживал ноты. есть несколько рудиментарных ошибок в этом модуле, которые следует очистить.
~interval~скорость арпеджиации
~step~направление и расстояние для выполнения арпеджио. нулевое значение - «пинг-понг».
~octaves~сколько октав пройти через



titlebar~
~save layout~[none]
~load~загрузить сохраненный файл .bsk для восстановления состояния
~save~сохранить текущее состояние как файл .bsk для последующего восстановления
~save as~сохранить текущее состояние как новый файл .bsk
~reset layout~сбросить до макета, указанного в "layout" в userprefs.json
~write audio~записать последние 30 минут звука в указанный вами путь_к записи
~?~показать помощь
~settings~настроить параметры, сохраненные как userprefs.json
~load layout~[none]
~lookahead (exp.)~использовать планирование вперед, которое необходимо для модуля сценария. автоматически включается при использовании скриптмодуля. Пока что предварительное планирование, похоже, не создает никаких проблем, но на всякий случай оставляем здесь этот флажок.
~autosave~каждый раз, когда добавляется новый модуль, запускать сохранение в data/savestate/autosave/, чтобы помочь перезагрузить состояние в случае сбоя. может быть довольно медленным при использовании модулей с тяжелыми семплами.
~play/pause~остановить всю обработку звука (shift-p)



plugin~экземпляр плагина VST
~vol~отрегулируйте выходную громкость
~program change~отправить сообщение об изменении программы экземпляру VST
~open~показать окно плагина
~show parametr~выбрать параметры для их отображения, чтобы их можно было настраивать из специального интерфейса. если VST имеет более 20 параметров, этот список изначально будет пустым. в этом случае, чтобы параметр появился в этом списке, покачивайте его в интерфейсе VST.
~preset~выбрать из сохраненных предустановок VST
~save as~сохранить текущие настройки VST в качестве предустановки для повторной загрузки позже



transport~контролирует темп и текущую временную позицию
~tempo~общий темп в ударах в минуту
~ + ~увеличить темп на единицу
~ - ~уменьшить темп на единицу
~swing~где должна находиться середина музыкального времени в интервале свинга. значение 0,5 означает отсутствие колебаний.
~swing interval~интервал, в течение которого применяется свинг
~timesigtop~максимальное значение тактового размера
~timesigbottom~нижнее значение тактового размера
~reset~сброс временной шкалы на ноль
~ < ~ сдвинуть текущее время назад
~ > ~сдвинуть текущее время вперед
~set tempo~



transposefrom~транспонировать ввод из указанного корня в корень текущего масштаба. Основное использование этого — позволить вам играть на клавиатуре в C, но оно будет транспонировано в текущий масштаб.
~root~корень, из которого нужно транспонировать
~retrigger~немедленно воспроизводить текущие ноты при изменении основного тона транспонирования или гаммы



m185sequencer~секвенсор, использующий уникальную парадигму мегаполиса m185 или intellijel
~interval~интервал на шаг
~reset step~сбрасывает счетчик на первый шаг
~pitch*~pitch для использования в этой строке
~pulses*~количество шагов, которые должна длиться эта строка
~gate*~поведение для каждой строки: "repeat" воспроизводит каждый шаг, "once" воспроизводит только первый шаг, "hold" удерживает все шаги, "rest" не воспроизводит шаги





notestepper~вывод нот через круговой перебор соединительных кабелей для создания последовательного разнообразия
~length~длина последовательности




splitter~разделяет стереосигнал на два монофонических сигнала или дублирует монофонический сигнал



scale~контролирует глобальный масштаб, используемый различными модулями
~root~основная нота гаммы
~scale~какой набор нот использовать
~degree~
~intonation~какой метод использовать для настройки гаммы
~tet~сколько полутонов составляют октаву
~tuning~какую частоту представляет высота тона, определенная в "note"?
~note~высота звука, которая отображается на частоту, определенную в "tuning"



output~направить аудио сюда, чтобы отправить его на выходной канал (ваши динамики или аудиоинтерфейс)
~ch~выходной канал (или каналы, если вы хотите стерео)



gain~регулирует громкость аудиосигнала
~gain~величина для регулировки сигнала. значение 1 не приведет к изменению сигнала.
