# BespokeSynth Azure Pipelines script

trigger:
  - main

pr:
  - main

jobs:
  - job: Build
    variables:
      isBuild: True
    strategy:
      matrix:
        macOS-x64:
          imageName: 'macos-10.15'
          isMac: True
          cmakeArguments: "-GXcode -DCMAKE_BUILD_TYPE=Debug -D\"CMAKE_OSX_ARCHITECTURES=x86_64\""
          cmakeConfig: "Debug"
        #macOS-arm:
        #  imageName: 'macos-10.15'
        #  isMac: True
        #  cmakeArguments: "-DCMAKE_BUILD_TYPE=Debug -D\"CMAKE_OSX_ARCHITECTURES=arm64\""
        #  cmakeConfig: "Debug"
        windows-x64:
          imageName: 'windows-2019'
          isWindows: True
          cmakeArguments: "-A x64 -DCMAKE_BUILD_TYPE=Debug"
          cmakeConfig: "Debug"
        linux-x64:
          imageName: 'ubuntu-20.04'
          isLinux: True
          cmakeArguments: "-GNinja -DCMAKE_BUILD_TYPE=Debug"
          cmakeConfig: "Debug"

    pool:
      vmImage: $(imageName)

    steps:
      - checkout: self
        fetchDepth: 1
        # submodules: recursive # can't do submodules here b'cuz depth=1 fails with Github

      - bash: |
          echo "BUILD REASON   = " $BUILD_REASON
          echo "cmakeArguments = " $(cmakeArguments)
          echo "cmakeConfig    = " $(cmakeConfig)
        displayName: all - details on build

      - bash: |
          git submodule update --init --recursive
        displayName: all - submodule init


      - bash: |
          set -e

          sudo apt-get update

          sudo apt-get install -y \
              devscripts \
              libxcb-cursor-dev \
              libxcb-keysyms1-dev \
              libxcb-util-dev \
              libxkbcommon-dev \
              libxkbcommon-x11-dev \
              ninja-build \
              xcb \
              libgtk-3-dev \
              libwebkit2gtk-4.0 \
              libwebkit2gtk-4.0-dev \
              libcurl4-openssl-dev \
              alsa \
              alsa-tools \
              libasound2-dev \
              libjack-dev \
              libfreetype6-dev \
              libxinerama-dev \
              libxcb-xinerama0 \
              libxinerama1 \
              x11proto-xinerama-dev \
              libxrandr-dev \
              libgl1-mesa-dev \
              libxcursor-dev \
              libxcursor1 \
              libxcb-cursor-dev \
              libxcb-cursor0 \
              libusb-1.0.0-dev

        condition: variables.isLinux
        displayName: linux - run apt-get

      - bash: |
          set -e
          cmake -Bbuild $(cmakeArguments)
        displayName: all - configure with cmake

      - bash: |
          set -e
          cmake --build build --config $(cmakeConfig)
        displayName: all - build with cmake
